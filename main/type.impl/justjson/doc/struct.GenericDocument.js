(function() {var type_impls = {
"justjson":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericDocument%3C'a,+Backing%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#48-111\">source</a><a href=\"#impl-GenericDocument%3C'a,+Backing%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Backing&gt; <a class=\"struct\" href=\"justjson/doc/struct.GenericDocument.html\" title=\"struct justjson::doc::GenericDocument\">GenericDocument</a>&lt;'a, Backing&gt;<div class=\"where\">where\n    Backing: <a class=\"trait\" href=\"justjson/doc/trait.NodeCollection.html\" title=\"trait justjson::doc::NodeCollection\">NodeCollection</a>&lt;'a&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_json_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#56-63\">source</a><h4 class=\"code-header\">pub fn <a href=\"justjson/doc/struct.GenericDocument.html#tymethod.from_json_bytes\" class=\"fn\">from_json_bytes</a>(source: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"justjson/struct.Error.html\" title=\"struct justjson::Error\">Error</a>&gt;<div class=\"where\">where\n    Backing: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Parses a JSON payload from <code>source</code>.</p>\n<p>This function verifies that <code>json</code> is valid UTF-8 while parsing the\nJSON.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_json_bytes_with_config\" class=\"method\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#69-77\">source</a><h4 class=\"code-header\">pub fn <a href=\"justjson/doc/struct.GenericDocument.html#tymethod.from_json_bytes_with_config\" class=\"fn\">from_json_bytes_with_config</a>(\n    source: &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n    config: <a class=\"struct\" href=\"justjson/parser/struct.ParseConfig.html\" title=\"struct justjson::parser::ParseConfig\">ParseConfig</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"justjson/struct.Error.html\" title=\"struct justjson::Error\">Error</a>&gt;<div class=\"where\">where\n    Backing: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Parses a JSON payload from <code>source</code>, with the settings from <code>config</code>.</p>\n<p>This function verifies that <code>json</code> is valid UTF-8 while parsing the\nJSON.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_json\" class=\"method\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#83-90\">source</a><h4 class=\"code-header\">pub fn <a href=\"justjson/doc/struct.GenericDocument.html#tymethod.from_json\" class=\"fn\">from_json</a>(source: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"justjson/struct.Error.html\" title=\"struct justjson::Error\">Error</a>&gt;<div class=\"where\">where\n    Backing: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Parses a JSON payload from <code>source</code>.</p>\n<p>Because the <code>str</code> type guarantees that <code>json</code> is valid UTF-8, no\nadditional unicode checks are performed on unescaped unicode sequences.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_json_with_config\" class=\"method\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#96-104\">source</a><h4 class=\"code-header\">pub fn <a href=\"justjson/doc/struct.GenericDocument.html#tymethod.from_json_with_config\" class=\"fn\">from_json_with_config</a>(\n    source: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n    config: <a class=\"struct\" href=\"justjson/parser/struct.ParseConfig.html\" title=\"struct justjson::parser::ParseConfig\">ParseConfig</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"justjson/struct.Error.html\" title=\"struct justjson::Error\">Error</a>&gt;<div class=\"where\">where\n    Backing: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class=\"docblock\"><p>Parses a JSON payload from <code>source</code>, with the settings from <code>config</code>.</p>\n<p>Because the <code>str</code> type guarantees that <code>json</code> is valid UTF-8, no\nadditional unicode checks are performed on unescaped unicode sequences.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#108-110\">source</a><h4 class=\"code-header\">pub fn <a href=\"justjson/doc/struct.GenericDocument.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"justjson/doc/struct.DocumentIter.html\" title=\"struct justjson::doc::DocumentIter\">DocumentIter</a>&lt;'_, 'a&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"DocumentIter&lt;&#39;_, &#39;a&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the nodes in this document.</p>\n</div></details></div></details>",0,"justjson::doc::Document","justjson::doc::HeaplessDocument"],["<section id=\"impl-StructuralEq-for-GenericDocument%3C'a,+Backing%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#43\">source</a><a href=\"#impl-StructuralEq-for-GenericDocument%3C'a,+Backing%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Backing&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"justjson/doc/struct.GenericDocument.html\" title=\"struct justjson::doc::GenericDocument\">GenericDocument</a>&lt;'a, Backing&gt;</h3></section>","StructuralEq","justjson::doc::Document","justjson::doc::HeaplessDocument"],["<section id=\"impl-Eq-for-GenericDocument%3C'a,+Backing%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#43\">source</a><a href=\"#impl-Eq-for-GenericDocument%3C'a,+Backing%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Backing: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"justjson/doc/struct.GenericDocument.html\" title=\"struct justjson::doc::GenericDocument\">GenericDocument</a>&lt;'a, Backing&gt;</h3></section>","Eq","justjson::doc::Document","justjson::doc::HeaplessDocument"],["<section id=\"impl-StructuralPartialEq-for-GenericDocument%3C'a,+Backing%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#43\">source</a><a href=\"#impl-StructuralPartialEq-for-GenericDocument%3C'a,+Backing%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Backing&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"justjson/doc/struct.GenericDocument.html\" title=\"struct justjson::doc::GenericDocument\">GenericDocument</a>&lt;'a, Backing&gt;</h3></section>","StructuralPartialEq","justjson::doc::Document","justjson::doc::HeaplessDocument"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericDocument%3C'a,+Backing%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#43\">source</a><a href=\"#impl-Debug-for-GenericDocument%3C'a,+Backing%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Backing: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"justjson/doc/struct.GenericDocument.html\" title=\"struct justjson::doc::GenericDocument\">GenericDocument</a>&lt;'a, Backing&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#43\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","justjson::doc::Document","justjson::doc::HeaplessDocument"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-GenericDocument%3C'a,+Backing%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#43\">source</a><a href=\"#impl-PartialEq-for-GenericDocument%3C'a,+Backing%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Backing: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"justjson/doc/struct.GenericDocument.html\" title=\"struct justjson::doc::GenericDocument\">GenericDocument</a>&lt;'a, Backing&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/justjson/doc.rs.html#43\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"justjson/doc/struct.GenericDocument.html\" title=\"struct justjson::doc::GenericDocument\">GenericDocument</a>&lt;'a, Backing&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","justjson::doc::Document","justjson::doc::HeaplessDocument"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()